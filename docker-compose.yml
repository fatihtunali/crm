version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: tour-crm-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: tour_crm
      MYSQL_USER: tourcrm
      MYSQL_PASSWORD: tourcrm123
    ports:
      - '3306:3306'
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docs/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - tour-crm-network
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer:latest
    container_name: tour-crm-adminer
    restart: unless-stopped
    ports:
      - '8080:8080'
    environment:
      ADMINER_DEFAULT_SERVER: mysql
      ADMINER_DESIGN: 'nette'
    networks:
      - tour-crm-network
    depends_on:
      - mysql

  redis:
    image: redis:7-alpine
    container_name: tour-crm-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - tour-crm-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: tour-crm-api
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DATABASE_URL: mysql://tourcrm:tourcrm123@mysql:3306/tour_crm
      REDIS_URL: redis://redis:6379
    ports:
      - '3001:3001'
    volumes:
      - ./apps/api:/app/apps/api
      - ./packages:/app/packages
      - /app/apps/api/node_modules
      - ./storage:/app/storage
    networks:
      - tour-crm-network
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run dev:api

volumes:
  mysql_data:
  redis_data:

networks:
  tour-crm-network:
    driver: bridge
