"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/[locale]/(dashboard)/bookings/page",{

/***/ "(app-pages-browser)/./src/lib/api/client.ts":
/*!*******************************!*\
  !*** ./src/lib/api/client.ts ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiClient: function() { return /* binding */ apiClient; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/../../node_modules/axios/lib/axios.js\");\n/* harmony import */ var _storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../storage */ \"(app-pages-browser)/./src/lib/storage.ts\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uuid */ \"(app-pages-browser)/../../node_modules/uuid/dist/esm-browser/v4.js\");\n/* harmony import */ var jwt_decode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jwt-decode */ \"(app-pages-browser)/../../node_modules/jwt-decode/build/esm/index.js\");\n\n\n\n\nconst API_BASE_URL = \"http://localhost:3001/api/v1\" || 0;\n// Create axios instance\nconst apiClient = axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].create({\n    baseURL: API_BASE_URL,\n    headers: {\n        \"Content-Type\": \"application/json\"\n    }\n});\n// Helper to get tenant ID from JWT\nfunction getTenantId() {\n    const token = _storage__WEBPACK_IMPORTED_MODULE_0__.storage.getAccessToken();\n    if (!token) return null;\n    try {\n        const decoded = (0,jwt_decode__WEBPACK_IMPORTED_MODULE_1__.jwtDecode)(token);\n        return decoded.tenant_id || null;\n    } catch (e) {\n        return null;\n    }\n}\n// Helper to get locale from URL or default to 'en'\nfunction getLocale() {\n    if (false) {}\n    const pathname = window.location.pathname;\n    const locale = pathname.split(\"/\")[1];\n    return [\n        \"en\",\n        \"tr\"\n    ].includes(locale) ? locale : \"en\";\n}\n// Request interceptor: inject auth headers\napiClient.interceptors.request.use((config)=>{\n    const token = _storage__WEBPACK_IMPORTED_MODULE_0__.storage.getAccessToken();\n    const tenantId = getTenantId();\n    const locale = getLocale();\n    // Add Authorization header if token exists\n    if (token && config.headers) {\n        config.headers.Authorization = \"Bearer \".concat(token);\n    }\n    // Add X-Tenant-Id header if available\n    if (tenantId && config.headers) {\n        config.headers[\"X-Tenant-Id\"] = String(tenantId);\n    }\n    // Add Accept-Language header\n    if (config.headers) {\n        config.headers[\"Accept-Language\"] = locale;\n    }\n    // Add Idempotency-Key for payment endpoints (POST/PUT)\n    if (config.url && (config.url.includes(\"/client-payments\") || config.url.includes(\"/vendor-payments\")) && (config.method === \"post\" || config.method === \"put\") && config.headers) {\n        config.headers[\"Idempotency-Key\"] = (0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n    }\n    return config;\n}, (error)=>{\n    return Promise.reject(error);\n});\n// Response interceptor: handle token refresh on 401\nlet isRefreshing = false;\nlet failedQueue = [];\nconst processQueue = function(error) {\n    let token = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;\n    failedQueue.forEach((prom)=>{\n        if (error) {\n            prom.reject(error);\n        } else {\n            prom.resolve(token);\n        }\n    });\n    failedQueue = [];\n};\napiClient.interceptors.response.use((response)=>response, async (error)=>{\n    var _error_response;\n    const originalRequest = error.config;\n    // If 401 and not already retrying\n    if (((_error_response = error.response) === null || _error_response === void 0 ? void 0 : _error_response.status) === 401 && !originalRequest._retry) {\n        var _originalRequest_url;\n        // Exclude refresh endpoint from retry\n        if ((_originalRequest_url = originalRequest.url) === null || _originalRequest_url === void 0 ? void 0 : _originalRequest_url.includes(\"/auth/refresh\")) {\n            _storage__WEBPACK_IMPORTED_MODULE_0__.storage.clearTokens();\n            if (true) {\n                window.location.href = \"/\".concat(getLocale(), \"/login\");\n            }\n            return Promise.reject(error);\n        }\n        if (isRefreshing) {\n            // Queue this request until token is refreshed\n            return new Promise((resolve, reject)=>{\n                failedQueue.push({\n                    resolve,\n                    reject\n                });\n            }).then((token)=>{\n                if (originalRequest.headers) {\n                    originalRequest.headers.Authorization = \"Bearer \".concat(token);\n                }\n                return apiClient(originalRequest);\n            }).catch((err)=>{\n                return Promise.reject(err);\n            });\n        }\n        originalRequest._retry = true;\n        isRefreshing = true;\n        const refreshToken = _storage__WEBPACK_IMPORTED_MODULE_0__.storage.getRefreshToken();\n        if (!refreshToken) {\n            _storage__WEBPACK_IMPORTED_MODULE_0__.storage.clearTokens();\n            if (true) {\n                window.location.href = \"/\".concat(getLocale(), \"/login\");\n            }\n            return Promise.reject(error);\n        }\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].post(\"\".concat(API_BASE_URL, \"/auth/refresh\"), {\n                refreshToken: refreshToken\n            });\n            const { accessToken, refreshToken: newRefreshToken } = response.data;\n            _storage__WEBPACK_IMPORTED_MODULE_0__.storage.setTokens(accessToken, newRefreshToken);\n            processQueue(null, accessToken);\n            if (originalRequest.headers) {\n                originalRequest.headers.Authorization = \"Bearer \".concat(accessToken);\n            }\n            return apiClient(originalRequest);\n        } catch (refreshError) {\n            processQueue(refreshError, null);\n            _storage__WEBPACK_IMPORTED_MODULE_0__.storage.clearTokens();\n            if (true) {\n                window.location.href = \"/\".concat(getLocale(), \"/login\");\n            }\n            return Promise.reject(refreshError);\n        } finally{\n            isRefreshing = false;\n        }\n    }\n    return Promise.reject(error);\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (apiClient);\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api/client.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/lib/api/endpoints/bookings.ts":
/*!*******************************************!*\
  !*** ./src/lib/api/endpoints/bookings.ts ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bookingsApi: function() { return /* binding */ bookingsApi; }\n/* harmony export */ });\n/* harmony import */ var _client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client */ \"(app-pages-browser)/./src/lib/api/client.ts\");\n\nconst bookingsApi = {\n    /**\n   * Get all bookings with pagination and optional status filter\n   */ getAll: async (params)=>{\n        const queryParams = new URLSearchParams();\n        if (params === null || params === void 0 ? void 0 : params.page) queryParams.append(\"page\", params.page.toString());\n        if (params === null || params === void 0 ? void 0 : params.limit) queryParams.append(\"limit\", params.limit.toString());\n        if (params === null || params === void 0 ? void 0 : params.status) queryParams.append(\"status\", params.status);\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__.apiClient.get(\"/bookings?\".concat(queryParams.toString()));\n        return response.data;\n    },\n    /**\n   * Search bookings with advanced filters\n   */ search: async (params)=>{\n        const queryParams = new URLSearchParams();\n        if (params.page) queryParams.append(\"page\", params.page.toString());\n        if (params.limit) queryParams.append(\"limit\", params.limit.toString());\n        if (params.bookingCode) queryParams.append(\"bookingCode\", params.bookingCode);\n        if (params.clientName) queryParams.append(\"clientName\", params.clientName);\n        if (params.clientEmail) queryParams.append(\"clientEmail\", params.clientEmail);\n        if (params.status) queryParams.append(\"status\", params.status);\n        if (params.startDateFrom) queryParams.append(\"startDateFrom\", params.startDateFrom);\n        if (params.startDateTo) queryParams.append(\"startDateTo\", params.startDateTo);\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__.apiClient.get(\"/bookings/search?\".concat(queryParams.toString()));\n        return response.data;\n    },\n    /**\n   * Get booking statistics by status\n   */ getStats: async ()=>{\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__.apiClient.get(\"/bookings/stats\");\n        return response.data;\n    },\n    /**\n   * Get booking by ID with full details\n   */ getById: async (id)=>{\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__.apiClient.get(\"/bookings/\".concat(id));\n        return response.data;\n    },\n    /**\n   * Calculate P&L for a booking\n   */ getPnL: async (id)=>{\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__.apiClient.get(\"/bookings/\".concat(id, \"/pnl\"));\n        return response.data;\n    },\n    /**\n   * Create a new booking\n   */ create: async (data)=>{\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__.apiClient.post(\"/bookings\", data);\n        return response.data;\n    },\n    /**\n   * Update booking\n   */ update: async (id, data)=>{\n        const response = await _client__WEBPACK_IMPORTED_MODULE_0__.apiClient.patch(\"/bookings/\".concat(id), data);\n        return response.data;\n    },\n    /**\n   * Delete booking\n   */ delete: async (id)=>{\n        await _client__WEBPACK_IMPORTED_MODULE_0__.apiClient.delete(\"/bookings/\".concat(id));\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvYXBpL2VuZHBvaW50cy9ib29raW5ncy50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFzQztBQVkvQixNQUFNQyxjQUFjO0lBQ3pCOztHQUVDLEdBQ0RDLFFBQVEsT0FDTkM7UUFFQSxNQUFNQyxjQUFjLElBQUlDO1FBRXhCLElBQUlGLG1CQUFBQSw2QkFBQUEsT0FBUUcsSUFBSSxFQUFFRixZQUFZRyxNQUFNLENBQUMsUUFBUUosT0FBT0csSUFBSSxDQUFDRSxRQUFRO1FBQ2pFLElBQUlMLG1CQUFBQSw2QkFBQUEsT0FBUU0sS0FBSyxFQUFFTCxZQUFZRyxNQUFNLENBQUMsU0FBU0osT0FBT00sS0FBSyxDQUFDRCxRQUFRO1FBQ3BFLElBQUlMLG1CQUFBQSw2QkFBQUEsT0FBUU8sTUFBTSxFQUFFTixZQUFZRyxNQUFNLENBQUMsVUFBVUosT0FBT08sTUFBTTtRQUU5RCxNQUFNQyxXQUFXLE1BQU1YLDhDQUFTQSxDQUFDWSxHQUFHLENBQ2xDLGFBQW9DLE9BQXZCUixZQUFZSSxRQUFRO1FBRW5DLE9BQU9HLFNBQVNFLElBQUk7SUFDdEI7SUFFQTs7R0FFQyxHQUNEQyxRQUFRLE9BQU9YO1FBQ2IsTUFBTUMsY0FBYyxJQUFJQztRQUV4QixJQUFJRixPQUFPRyxJQUFJLEVBQUVGLFlBQVlHLE1BQU0sQ0FBQyxRQUFRSixPQUFPRyxJQUFJLENBQUNFLFFBQVE7UUFDaEUsSUFBSUwsT0FBT00sS0FBSyxFQUFFTCxZQUFZRyxNQUFNLENBQUMsU0FBU0osT0FBT00sS0FBSyxDQUFDRCxRQUFRO1FBQ25FLElBQUlMLE9BQU9ZLFdBQVcsRUFBRVgsWUFBWUcsTUFBTSxDQUFDLGVBQWVKLE9BQU9ZLFdBQVc7UUFDNUUsSUFBSVosT0FBT2EsVUFBVSxFQUFFWixZQUFZRyxNQUFNLENBQUMsY0FBY0osT0FBT2EsVUFBVTtRQUN6RSxJQUFJYixPQUFPYyxXQUFXLEVBQUViLFlBQVlHLE1BQU0sQ0FBQyxlQUFlSixPQUFPYyxXQUFXO1FBQzVFLElBQUlkLE9BQU9PLE1BQU0sRUFBRU4sWUFBWUcsTUFBTSxDQUFDLFVBQVVKLE9BQU9PLE1BQU07UUFDN0QsSUFBSVAsT0FBT2UsYUFBYSxFQUFFZCxZQUFZRyxNQUFNLENBQUMsaUJBQWlCSixPQUFPZSxhQUFhO1FBQ2xGLElBQUlmLE9BQU9nQixXQUFXLEVBQUVmLFlBQVlHLE1BQU0sQ0FBQyxlQUFlSixPQUFPZ0IsV0FBVztRQUU1RSxNQUFNUixXQUFXLE1BQU1YLDhDQUFTQSxDQUFDWSxHQUFHLENBQ2xDLG9CQUEyQyxPQUF2QlIsWUFBWUksUUFBUTtRQUUxQyxPQUFPRyxTQUFTRSxJQUFJO0lBQ3RCO0lBRUE7O0dBRUMsR0FDRE8sVUFBVTtRQUNSLE1BQU1ULFdBQVcsTUFBTVgsOENBQVNBLENBQUNZLEdBQUcsQ0FBaUI7UUFDckQsT0FBT0QsU0FBU0UsSUFBSTtJQUN0QjtJQUVBOztHQUVDLEdBQ0RRLFNBQVMsT0FBT0M7UUFDZCxNQUFNWCxXQUFXLE1BQU1YLDhDQUFTQSxDQUFDWSxHQUFHLENBQVUsYUFBZ0IsT0FBSFU7UUFDM0QsT0FBT1gsU0FBU0UsSUFBSTtJQUN0QjtJQUVBOztHQUVDLEdBQ0RVLFFBQVEsT0FBT0Q7UUFDYixNQUFNWCxXQUFXLE1BQU1YLDhDQUFTQSxDQUFDWSxHQUFHLENBQWMsYUFBZ0IsT0FBSFUsSUFBRztRQUNsRSxPQUFPWCxTQUFTRSxJQUFJO0lBQ3RCO0lBRUE7O0dBRUMsR0FDRFcsUUFBUSxPQUFPWDtRQUNiLE1BQU1GLFdBQVcsTUFBTVgsOENBQVNBLENBQUN5QixJQUFJLENBQVUsYUFBYVo7UUFDNUQsT0FBT0YsU0FBU0UsSUFBSTtJQUN0QjtJQUVBOztHQUVDLEdBQ0RhLFFBQVEsT0FBT0osSUFBWVQ7UUFDekIsTUFBTUYsV0FBVyxNQUFNWCw4Q0FBU0EsQ0FBQzJCLEtBQUssQ0FBVSxhQUFnQixPQUFITCxLQUFNVDtRQUNuRSxPQUFPRixTQUFTRSxJQUFJO0lBQ3RCO0lBRUE7O0dBRUMsR0FDRGUsUUFBUSxPQUFPTjtRQUNiLE1BQU10Qiw4Q0FBU0EsQ0FBQzRCLE1BQU0sQ0FBQyxhQUFnQixPQUFITjtJQUN0QztBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2xpYi9hcGkvZW5kcG9pbnRzL2Jvb2tpbmdzLnRzP2Y1OTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXBpQ2xpZW50IH0gZnJvbSAnLi4vY2xpZW50JztcbmltcG9ydCB7XG4gIEJvb2tpbmcsXG4gIENyZWF0ZUJvb2tpbmdEdG8sXG4gIFVwZGF0ZUJvb2tpbmdEdG8sXG4gIFBhZ2luYXRlZFJlc3BvbnNlLFxuICBCb29raW5nU3RhdHVzLFxuICBCb29raW5nU3RhdHMsXG4gIFNlYXJjaEJvb2tpbmdQYXJhbXMsXG4gIFBuTFJlc3BvbnNlLFxufSBmcm9tICcuLi90eXBlcyc7XG5cbmV4cG9ydCBjb25zdCBib29raW5nc0FwaSA9IHtcbiAgLyoqXG4gICAqIEdldCBhbGwgYm9va2luZ3Mgd2l0aCBwYWdpbmF0aW9uIGFuZCBvcHRpb25hbCBzdGF0dXMgZmlsdGVyXG4gICAqL1xuICBnZXRBbGw6IGFzeW5jIChcbiAgICBwYXJhbXM/OiB7IHBhZ2U/OiBudW1iZXI7IGxpbWl0PzogbnVtYmVyOyBzdGF0dXM/OiBCb29raW5nU3RhdHVzIH1cbiAgKTogUHJvbWlzZTxQYWdpbmF0ZWRSZXNwb25zZTxCb29raW5nPj4gPT4ge1xuICAgIGNvbnN0IHF1ZXJ5UGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtcygpO1xuXG4gICAgaWYgKHBhcmFtcz8ucGFnZSkgcXVlcnlQYXJhbXMuYXBwZW5kKCdwYWdlJywgcGFyYW1zLnBhZ2UudG9TdHJpbmcoKSk7XG4gICAgaWYgKHBhcmFtcz8ubGltaXQpIHF1ZXJ5UGFyYW1zLmFwcGVuZCgnbGltaXQnLCBwYXJhbXMubGltaXQudG9TdHJpbmcoKSk7XG4gICAgaWYgKHBhcmFtcz8uc3RhdHVzKSBxdWVyeVBhcmFtcy5hcHBlbmQoJ3N0YXR1cycsIHBhcmFtcy5zdGF0dXMpO1xuXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBhcGlDbGllbnQuZ2V0PFBhZ2luYXRlZFJlc3BvbnNlPEJvb2tpbmc+PihcbiAgICAgIGAvYm9va2luZ3M/JHtxdWVyeVBhcmFtcy50b1N0cmluZygpfWBcbiAgICApO1xuICAgIHJldHVybiByZXNwb25zZS5kYXRhO1xuICB9LFxuXG4gIC8qKlxuICAgKiBTZWFyY2ggYm9va2luZ3Mgd2l0aCBhZHZhbmNlZCBmaWx0ZXJzXG4gICAqL1xuICBzZWFyY2g6IGFzeW5jIChwYXJhbXM6IFNlYXJjaEJvb2tpbmdQYXJhbXMpOiBQcm9taXNlPFBhZ2luYXRlZFJlc3BvbnNlPEJvb2tpbmc+PiA9PiB7XG4gICAgY29uc3QgcXVlcnlQYXJhbXMgPSBuZXcgVVJMU2VhcmNoUGFyYW1zKCk7XG5cbiAgICBpZiAocGFyYW1zLnBhZ2UpIHF1ZXJ5UGFyYW1zLmFwcGVuZCgncGFnZScsIHBhcmFtcy5wYWdlLnRvU3RyaW5nKCkpO1xuICAgIGlmIChwYXJhbXMubGltaXQpIHF1ZXJ5UGFyYW1zLmFwcGVuZCgnbGltaXQnLCBwYXJhbXMubGltaXQudG9TdHJpbmcoKSk7XG4gICAgaWYgKHBhcmFtcy5ib29raW5nQ29kZSkgcXVlcnlQYXJhbXMuYXBwZW5kKCdib29raW5nQ29kZScsIHBhcmFtcy5ib29raW5nQ29kZSk7XG4gICAgaWYgKHBhcmFtcy5jbGllbnROYW1lKSBxdWVyeVBhcmFtcy5hcHBlbmQoJ2NsaWVudE5hbWUnLCBwYXJhbXMuY2xpZW50TmFtZSk7XG4gICAgaWYgKHBhcmFtcy5jbGllbnRFbWFpbCkgcXVlcnlQYXJhbXMuYXBwZW5kKCdjbGllbnRFbWFpbCcsIHBhcmFtcy5jbGllbnRFbWFpbCk7XG4gICAgaWYgKHBhcmFtcy5zdGF0dXMpIHF1ZXJ5UGFyYW1zLmFwcGVuZCgnc3RhdHVzJywgcGFyYW1zLnN0YXR1cyk7XG4gICAgaWYgKHBhcmFtcy5zdGFydERhdGVGcm9tKSBxdWVyeVBhcmFtcy5hcHBlbmQoJ3N0YXJ0RGF0ZUZyb20nLCBwYXJhbXMuc3RhcnREYXRlRnJvbSk7XG4gICAgaWYgKHBhcmFtcy5zdGFydERhdGVUbykgcXVlcnlQYXJhbXMuYXBwZW5kKCdzdGFydERhdGVUbycsIHBhcmFtcy5zdGFydERhdGVUbyk7XG5cbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGFwaUNsaWVudC5nZXQ8UGFnaW5hdGVkUmVzcG9uc2U8Qm9va2luZz4+KFxuICAgICAgYC9ib29raW5ncy9zZWFyY2g/JHtxdWVyeVBhcmFtcy50b1N0cmluZygpfWBcbiAgICApO1xuICAgIHJldHVybiByZXNwb25zZS5kYXRhO1xuICB9LFxuXG4gIC8qKlxuICAgKiBHZXQgYm9va2luZyBzdGF0aXN0aWNzIGJ5IHN0YXR1c1xuICAgKi9cbiAgZ2V0U3RhdHM6IGFzeW5jICgpOiBQcm9taXNlPEJvb2tpbmdTdGF0c1tdPiA9PiB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBhcGlDbGllbnQuZ2V0PEJvb2tpbmdTdGF0c1tdPignL2Jvb2tpbmdzL3N0YXRzJyk7XG4gICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEdldCBib29raW5nIGJ5IElEIHdpdGggZnVsbCBkZXRhaWxzXG4gICAqL1xuICBnZXRCeUlkOiBhc3luYyAoaWQ6IG51bWJlcik6IFByb21pc2U8Qm9va2luZz4gPT4ge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXBpQ2xpZW50LmdldDxCb29raW5nPihgL2Jvb2tpbmdzLyR7aWR9YCk7XG4gICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7XG4gIH0sXG5cbiAgLyoqXG4gICAqIENhbGN1bGF0ZSBQJkwgZm9yIGEgYm9va2luZ1xuICAgKi9cbiAgZ2V0UG5MOiBhc3luYyAoaWQ6IG51bWJlcik6IFByb21pc2U8UG5MUmVzcG9uc2U+ID0+IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGFwaUNsaWVudC5nZXQ8UG5MUmVzcG9uc2U+KGAvYm9va2luZ3MvJHtpZH0vcG5sYCk7XG4gICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7XG4gIH0sXG5cbiAgLyoqXG4gICAqIENyZWF0ZSBhIG5ldyBib29raW5nXG4gICAqL1xuICBjcmVhdGU6IGFzeW5jIChkYXRhOiBDcmVhdGVCb29raW5nRHRvKTogUHJvbWlzZTxCb29raW5nPiA9PiB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBhcGlDbGllbnQucG9zdDxCb29raW5nPignL2Jvb2tpbmdzJywgZGF0YSk7XG4gICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7XG4gIH0sXG5cbiAgLyoqXG4gICAqIFVwZGF0ZSBib29raW5nXG4gICAqL1xuICB1cGRhdGU6IGFzeW5jIChpZDogbnVtYmVyLCBkYXRhOiBVcGRhdGVCb29raW5nRHRvKTogUHJvbWlzZTxCb29raW5nPiA9PiB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBhcGlDbGllbnQucGF0Y2g8Qm9va2luZz4oYC9ib29raW5ncy8ke2lkfWAsIGRhdGEpO1xuICAgIHJldHVybiByZXNwb25zZS5kYXRhO1xuICB9LFxuXG4gIC8qKlxuICAgKiBEZWxldGUgYm9va2luZ1xuICAgKi9cbiAgZGVsZXRlOiBhc3luYyAoaWQ6IG51bWJlcik6IFByb21pc2U8dm9pZD4gPT4ge1xuICAgIGF3YWl0IGFwaUNsaWVudC5kZWxldGUoYC9ib29raW5ncy8ke2lkfWApO1xuICB9LFxufTtcbiJdLCJuYW1lcyI6WyJhcGlDbGllbnQiLCJib29raW5nc0FwaSIsImdldEFsbCIsInBhcmFtcyIsInF1ZXJ5UGFyYW1zIiwiVVJMU2VhcmNoUGFyYW1zIiwicGFnZSIsImFwcGVuZCIsInRvU3RyaW5nIiwibGltaXQiLCJzdGF0dXMiLCJyZXNwb25zZSIsImdldCIsImRhdGEiLCJzZWFyY2giLCJib29raW5nQ29kZSIsImNsaWVudE5hbWUiLCJjbGllbnRFbWFpbCIsInN0YXJ0RGF0ZUZyb20iLCJzdGFydERhdGVUbyIsImdldFN0YXRzIiwiZ2V0QnlJZCIsImlkIiwiZ2V0UG5MIiwiY3JlYXRlIiwicG9zdCIsInVwZGF0ZSIsInBhdGNoIiwiZGVsZXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api/endpoints/bookings.ts\n"));

/***/ })

});